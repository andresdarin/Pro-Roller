{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./trabajos.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./trabajos.component.css?ngResource\";\nimport { Component, ViewChild, Renderer2 } from '@angular/core';\nlet TrabajosComponent = class TrabajosComponent {\n  get trabajosInfinitos() {\n    return [...this.trabajos, ...this.trabajos, ...this.trabajos];\n  }\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.scrollAmount = 0;\n    this.speed = 0.8;\n    this.isHovered = false;\n    this.isPaused = false;\n    this.isInitialized = false;\n    // Drag variables\n    this.isDragging = false;\n    this.startX = 0;\n    this.startScrollAmount = 0;\n    this.dragVelocity = 0;\n    this.lastDragTime = 0;\n    this.lastDragX = 0;\n    this.isMobile = false;\n    // Modal\n    this.selectedImage = null;\n    this.showModal = false;\n    this.trabajos = [{\n      img: \"assets/img/IMG-20250726-WA0053.jpg\",\n      titulo: \"Roller Screen\",\n      descripcion: \"Exterior con filtro UV.\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0056.jpg\",\n      titulo: \"Pinza italiana 3\",\n      descripcion: \"Cortina tradicional en pinza italiana con blackout.\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/roller-translucida.jpeg\",\n      titulo: \"Tela Screen\",\n      descripcion: \"Filtra el sol directo, protegiendo tus espacios del deterioro.\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/IMG-20250721-WA0006.jpg\",\n      titulo: \"Pinza italiana 2\",\n      descripcion: \"Cortina clásica con un toque más moderno.\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/cortina-tipo-antigua-translucida.jpeg\",\n      titulo: \"Pinza italiana 1\",\n      descripcion: \"Cortina clásica con un toque más moderno.\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0061.jpg\",\n      titulo: \"Cortina en Voile\",\n      descripcion: \"Cortina en voile que permite el paso de luz de manera difusa.\",\n      size: \"giant\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0059.jpg\",\n      titulo: \"Cortina Texturizada\",\n      descripcion: \"Cortina con textura sutil, combinando funcionalidad y estilo.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0057.jpg\",\n      titulo: \"Cortina tradicional en Blackout\",\n      descripcion: \"Cortina tradicional en blackout que asegura privacidad y oscuridad.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0052.jpg\",\n      titulo: \"Roller Blackout Beige\",\n      descripcion: \"Cortina roller blackout de color beige, ideal para oscurecer el ambiente.\",\n      size: \"giant\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0050.jpg\",\n      titulo: \"Screen 5%\",\n      descripcion: \"Tela screen 5%, ideal para controlar la luz sin perder la vista.\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0060.jpg\",\n      titulo: \"Cortina Tradicional\",\n      descripcion: \"Cortina tradicional que aporta calidez y elegancia a cualquier espacio.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/roller-blackout.jpeg\",\n      titulo: \"Black Out\",\n      descripcion: \"Aislante térmico y sonoro. Totalmente opaca.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0055.jpg\",\n      titulo: \"Cortinas Opacas\",\n      descripcion: \"Cortinas opacas que garantizan privacidad y control total de luz.\",\n      size: \"wide\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0062.jpg\",\n      titulo: \"Cortina Tradicional  en Voile\",\n      descripcion: \"Dormitorio con cortina tradicional en voile que permite regular la entrada de luz y asegurar el descanso.\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0058.jpg\",\n      titulo: \"Cortinas en Sala de Estar\",\n      descripcion: \"Cortinas que complementan la decoración de una sala de estar, aportando calidez.\",\n      size: \"wide\"\n    }, {\n      img: \"assets/img/roller-rayada.jpeg\",\n      titulo: \"Bambú\",\n      descripcion: \"Ideal para ambientes con estilo natural.\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0051.jpg\",\n      titulo: \"Cortina Roller\",\n      descripcion: \"Tela screen 5%\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/cortina-tipo-antigua.jpeg\",\n      titulo: \"Tradicional Doble en Pinza Americana\",\n      descripcion: \"Cálidas y acogedoras.\",\n      size: \"giant\"\n    }];\n  }\n  ngAfterViewInit() {\n    this.checkIfMobile();\n    setTimeout(() => {\n      this.setupEventListeners();\n      this.startScrollAnimation();\n    }, 300);\n    window.addEventListener('resize', () => this.checkIfMobile());\n  }\n  ngOnDestroy() {\n    this.cleanup();\n    if (this.momentumId) cancelAnimationFrame(this.momentumId);\n  }\n  checkIfMobile() {\n    this.isMobile = window.innerWidth <= 768;\n  }\n  cleanup() {\n    if (this.animationId) cancelAnimationFrame(this.animationId);\n    this.animationId = undefined;\n  }\n  setupEventListeners() {\n    const container = this.sliderContainer.nativeElement;\n    if (!this.isMobile) {\n      this.renderer.listen(container, 'mouseenter', () => this.isHovered = true);\n      this.renderer.listen(container, 'mouseleave', () => this.isHovered = false);\n    } else {\n      this.setupTouchEvents(container);\n    }\n    document.addEventListener('visibilitychange', () => {\n      this.isPaused = document.hidden;\n    });\n  }\n  // Simplified touch logic for tap vs drag\n  setupTouchEvents(container) {\n    let touchStartTime = 0;\n    let touchStartX = 0;\n    let touchStartY = 0;\n    let hasMoved = false;\n    // Touch start\n    this.renderer.listen(container, 'touchstart', e => {\n      if (e.touches.length !== 1) return;\n      touchStartTime = Date.now();\n      const t = e.touches[0];\n      touchStartX = t.clientX;\n      touchStartY = t.clientY;\n      hasMoved = false;\n      // Prepare drag\n      this.startX = t.clientX;\n      this.startScrollAmount = this.scrollAmount;\n      this.dragVelocity = 0;\n      this.lastDragTime = Date.now();\n      this.lastDragX = this.startX;\n      if (this.momentumId) cancelAnimationFrame(this.momentumId);\n    });\n    // Touch move\n    this.renderer.listen(container, 'touchmove', e => {\n      if (e.touches.length !== 1) return;\n      const t = e.touches[0];\n      const dx = Math.abs(t.clientX - touchStartX);\n      const dy = Math.abs(t.clientY - touchStartY);\n      if (dx > 10 || dy > 10) {\n        hasMoved = true;\n        // Handle drag\n        const now = Date.now();\n        this.dragVelocity = (this.lastDragX - t.clientX) / (now - this.lastDragTime);\n        this.lastDragX = t.clientX;\n        this.lastDragTime = now;\n        const delta = this.startX - t.clientX;\n        let newScroll = this.startScrollAmount + delta;\n        const width = this.calculateSingleSetWidth();\n        // wrap\n        if (newScroll < 0) newScroll = width + newScroll % width;else if (newScroll >= width) newScroll %= width;\n        this.scrollAmount = newScroll;\n        this.updateSliderPosition();\n        e.preventDefault();\n      }\n    }, {\n      passive: false\n    });\n    // Touch end\n    this.renderer.listen(container, 'touchend', e => {\n      const touchDuration = Date.now() - touchStartTime;\n      const endX = e.changedTouches[0].clientX;\n      const movedDistance = Math.abs(endX - touchStartX);\n      // Tap\n      if (touchDuration < 200 && movedDistance < 10 && !hasMoved) {\n        e.preventDefault();\n        const target = e.target.closest('li');\n        if (target) {\n          const idx = Array.from(this.sliderGrid.nativeElement.children).indexOf(target);\n          if (idx >= 0) this.openModal(this.trabajos[idx % this.trabajos.length]);\n        }\n      } else if (Math.abs(this.dragVelocity) > 0.1 && hasMoved) {\n        this.applyMomentum();\n      }\n      this.isPaused = false;\n    });\n    this.renderer.listen(container, 'touchcancel', () => {\n      this.isPaused = false;\n    });\n  }\n  applyMomentum() {\n    const friction = 0.95;\n    const minV = 0.1;\n    const step = () => {\n      if (Math.abs(this.dragVelocity) < minV) {\n        this.isPaused = false;\n        return;\n      }\n      this.scrollAmount += this.dragVelocity * 5;\n      this.dragVelocity *= friction;\n      const width = this.calculateSingleSetWidth();\n      if (this.scrollAmount < 0) this.scrollAmount = width + this.scrollAmount % width;else if (this.scrollAmount >= width) this.scrollAmount %= width;\n      this.updateSliderPosition();\n      this.momentumId = requestAnimationFrame(step);\n    };\n    this.momentumId = requestAnimationFrame(step);\n  }\n  updateSliderPosition() {\n    this.sliderGrid.nativeElement.style.transform = `translateX(-${this.scrollAmount}px)`;\n  }\n  startScrollAnimation() {\n    if (this.isInitialized) return;\n    this.isInitialized = true;\n    const animate = () => {\n      if (!this.isHovered && !this.isPaused && !document.hidden) {\n        this.scrollAmount += this.speed;\n        const width = this.calculateSingleSetWidth();\n        if (this.scrollAmount >= width) this.scrollAmount = 0;\n        this.updateSliderPosition();\n      }\n      this.animationId = requestAnimationFrame(animate);\n    };\n    setTimeout(animate, 200);\n  }\n  calculateSingleSetWidth() {\n    const items = this.sliderGrid.nativeElement.querySelectorAll('li');\n    const count = this.trabajos.length;\n    if (!items.length) return 2000;\n    const firstSet = Array.from(items).slice(0, count);\n    let max = 0;\n    firstSet.forEach(item => {\n      const rect = item.getBoundingClientRect();\n      const parentRect = this.sliderGrid.nativeElement.getBoundingClientRect();\n      max = Math.max(max, rect.right - parentRect.left + 15);\n    });\n    return max || count * 295;\n  }\n  // Modal\n  openModal(trabajo) {\n    this.selectedImage = trabajo;\n    this.showModal = true;\n    document.body.style.overflow = 'hidden';\n  }\n  closeModal() {\n    this.showModal = false;\n    this.selectedImage = null;\n    document.body.style.overflow = 'auto';\n  }\n  onModalBackgroundClick(event) {\n    if (event.target === event.currentTarget) this.closeModal();\n  }\n  // Controles opcionales\n  pauseScroll() {\n    this.isPaused = true;\n  }\n  resumeScroll() {\n    this.isPaused = false;\n  }\n  setSpeed(newSpeed) {\n    this.speed = Math.max(0.5, Math.min(3, newSpeed));\n  }\n  reinitializeSlider() {\n    this.cleanup();\n    this.isInitialized = false;\n    this.scrollAmount = 0;\n    setTimeout(() => this.startScrollAnimation(), 100);\n  }\n  static {\n    this.ctorParameters = () => [{\n      type: Renderer2\n    }];\n  }\n  static {\n    this.propDecorators = {\n      sliderContainer: [{\n        type: ViewChild,\n        args: ['sliderContainer', {\n          static: true\n        }]\n      }],\n      sliderGrid: [{\n        type: ViewChild,\n        args: ['sliderGrid', {\n          static: true\n        }]\n      }]\n    };\n  }\n};\nTrabajosComponent = __decorate([Component({\n  selector: 'app-trabajos',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], TrabajosComponent);\nexport { TrabajosComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
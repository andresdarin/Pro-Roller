{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./trabajos.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./trabajos.component.css?ngResource\";\nimport { Component, ViewChild } from '@angular/core';\nlet TrabajosComponent = class TrabajosComponent {\n  constructor() {\n    this.scrollAmount = 0;\n    this.speed = 0.5;\n    this.trabajos = [{\n      img: 'assets/img/roller-blackout.jpeg',\n      titulo: 'Black Out',\n      descripcion: 'Aislante térmico y sonoro. Totalmente opaca.',\n      size: 'large' // Para item de 4 filas\n    }, {\n      img: 'assets/img/roller-bambu.jpeg',\n      titulo: 'Bambú',\n      descripcion: 'Estilo rústico, ideal para ambientes cálidos.',\n      size: 'wide' // Para item de 2 filas, 2 columnas\n    }, {\n      img: 'assets/img/cortina-tipo-antigua.jpeg',\n      titulo: 'Tradicional',\n      descripcion: 'Con pinza americana. Cálidas y acogedoras.',\n      size: 'wide' // Para item de 2 filas, 2 columnas\n    }, {\n      img: 'assets/img/roller-rayada.jpeg',\n      titulo: 'Bambú rayada',\n      descripcion: 'Ideal para ambientes con estilo natural.',\n      size: 'large' // Para item de 4 filas\n    }, {\n      img: 'assets/img/roller-translucida.jpeg',\n      titulo: 'Roller con tela Screen',\n      descripcion: 'Filtra el sol directo, protegiendo tus espacios del deterioro.',\n      size: 'normal' // Para item normal\n    }, {\n      img: 'assets/img/cortina-tipo-antigua-translucida.jpeg',\n      titulo: 'Pinza italiana',\n      descripcion: 'Cortina clásica con un toque más moderno.',\n      size: 'normal' // Para item normal\n    }];\n  }\n  // Duplicamos los trabajos para el efecto infinito\n  get trabajosInfinitos() {\n    return [...this.trabajos, ...this.trabajos];\n  }\n  ngAfterViewInit() {\n    // Pequeño delay para asegurar que el DOM esté completamente renderizado\n    setTimeout(() => {\n      this.initAutoScroll();\n    }, 100);\n  }\n  ngOnDestroy() {\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n    }\n  }\n  initAutoScroll() {\n    const slider = this.sliderContainer.nativeElement;\n    const sliderGrid = this.sliderGrid.nativeElement;\n    const autoScroll = () => {\n      this.scrollAmount += this.speed;\n      // Cuando llegamos a la mitad (donde empiezan los elementos duplicados)\n      // volvemos al inicio para crear el efecto infinito\n      if (this.scrollAmount >= sliderGrid.scrollWidth / 2) {\n        this.scrollAmount = 0;\n      }\n      slider.scrollLeft = this.scrollAmount;\n      this.animationId = requestAnimationFrame(autoScroll);\n    };\n    autoScroll();\n  }\n  // Método para obtener la clase CSS según el tamaño\n  getItemClass(index, size) {\n    const baseClass = 'item';\n    switch (size) {\n      case 'large':\n        return `${baseClass} item-large`;\n      case 'wide':\n        return `${baseClass} item-wide`;\n      default:\n        return `${baseClass} item-normal`;\n    }\n  }\n  // Método para pausar/reanudar el scroll (opcional)\n  pauseScroll() {\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = undefined;\n    }\n  }\n  resumeScroll() {\n    if (!this.animationId) {\n      this.initAutoScroll();\n    }\n  }\n  static {\n    this.propDecorators = {\n      sliderContainer: [{\n        type: ViewChild,\n        args: ['sliderContainer']\n      }],\n      sliderGrid: [{\n        type: ViewChild,\n        args: ['sliderGrid']\n      }]\n    };\n  }\n};\nTrabajosComponent = __decorate([Component({\n  selector: 'app-trabajos',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], TrabajosComponent);\nexport { TrabajosComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
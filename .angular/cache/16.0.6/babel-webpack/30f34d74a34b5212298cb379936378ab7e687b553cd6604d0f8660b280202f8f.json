{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./trabajos.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./trabajos.component.css?ngResource\";\nimport { Component, ViewChild } from '@angular/core';\nlet TrabajosComponent = class TrabajosComponent {\n  constructor() {\n    this.scrollAmount = 0;\n    this.speed = 0.5;\n    this.trabajos = [{\n      img: 'assets/img/roller-blackout.jpeg',\n      titulo: 'Black Out',\n      descripcion: 'Aislante térmico y sonoro. Totalmente opaca.',\n      size: 'large'\n    }, {\n      img: 'assets/img/IMG-20250726-WA0050.jpg',\n      titulo: 'Bambú',\n      descripcion: 'Estilo rústico, ideal para ambientes cálidos.',\n      size: 'wide'\n    }, {\n      img: 'assets/img/cortina-tipo-antigua.jpeg',\n      titulo: 'Tradicional',\n      descripcion: 'Con pinza americana. Cálidas y acogedoras.',\n      size: 'wide'\n    }, {\n      img: 'assets/img/roller-rayada.jpeg',\n      titulo: 'Bambú rayada',\n      descripcion: 'Ideal para ambientes con estilo natural.',\n      size: 'large'\n    }, {\n      img: 'assets/img/roller-translucida.jpeg',\n      titulo: 'Roller con tela Screen',\n      descripcion: 'Filtra el sol directo, protegiendo tus espacios del deterioro.',\n      size: 'normal'\n    }, {\n      img: 'assets/img/cortina-tipo-antigua-translucida.jpeg',\n      titulo: 'Pinza italiana',\n      descripcion: 'Cortina clásica con un toque más moderno.',\n      size: 'normal'\n    }];\n  }\n  // Genera 40 trabajos mezclando los existentes\n  get trabajosInfinitos() {\n    const trabajosExtendidos = [];\n    for (let i = 0; i < 40; i++) {\n      const original = this.trabajos[i % this.trabajos.length];\n      trabajosExtendidos.push({\n        ...original,\n        titulo: `${original.titulo} ${i + 1}` // opcional: numerar para diferenciarlos\n      });\n    }\n\n    return trabajosExtendidos;\n  }\n  ngAfterViewInit() {\n    // Delay para asegurar que el DOM esté listo\n    setTimeout(() => {\n      this.initAutoScroll();\n    }, 100);\n  }\n  ngOnDestroy() {\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n    }\n  }\n  initAutoScroll() {\n    const slider = this.sliderContainer.nativeElement;\n    const sliderGrid = this.sliderGrid.nativeElement;\n    setTimeout(() => {\n      const allItems = sliderGrid.querySelectorAll('li');\n      // Calcular ancho total de los ítems visibles (en vez de solo los originales)\n      let maxRight = 0;\n      allItems.forEach(item => {\n        const el = item;\n        const right = el.offsetLeft + el.offsetWidth;\n        maxRight = Math.max(maxRight, right);\n      });\n      const resetPoint = maxRight + 50; // padding extra para que reinicie suave\n      const autoScroll = () => {\n        this.scrollAmount += this.speed;\n        if (this.scrollAmount >= resetPoint) {\n          this.scrollAmount = 0;\n        }\n        slider.scrollLeft = this.scrollAmount;\n        this.animationId = requestAnimationFrame(autoScroll);\n      };\n      autoScroll();\n    }, 300);\n  }\n  getItemClass(index, size) {\n    const baseClass = 'item';\n    switch (size) {\n      case 'large':\n        return `${baseClass} item-large`;\n      case 'wide':\n        return `${baseClass} item-wide`;\n      default:\n        return `${baseClass} item-normal`;\n    }\n  }\n  pauseScroll() {\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = undefined;\n    }\n  }\n  resumeScroll() {\n    if (!this.animationId) {\n      this.initAutoScroll();\n    }\n  }\n  static {\n    this.propDecorators = {\n      sliderContainer: [{\n        type: ViewChild,\n        args: ['sliderContainer']\n      }],\n      sliderGrid: [{\n        type: ViewChild,\n        args: ['sliderGrid']\n      }]\n    };\n  }\n};\nTrabajosComponent = __decorate([Component({\n  selector: 'app-trabajos',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], TrabajosComponent);\nexport { TrabajosComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
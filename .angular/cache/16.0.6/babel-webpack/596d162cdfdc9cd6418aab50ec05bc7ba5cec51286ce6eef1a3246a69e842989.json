{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./trabajos.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./trabajos.component.css?ngResource\";\nimport { Component, ViewChild } from '@angular/core';\nlet TrabajosComponent = class TrabajosComponent {\n  constructor() {\n    this.scrollAmount = 0;\n    this.speed = 0.3; // Reducir velocidad para mejor experiencia\n    this.isHovered = false;\n    this.isPaused = false;\n    this.trabajos = [{\n      img: \"assets/img/roller-blackout.jpeg\",\n      titulo: \"Black Out\",\n      descripcion: \"Aislante térmico y sonoro. Totalmente opaca.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0050.jpg\",\n      titulo: \"Bambú\",\n      descripcion: \"Estilo rústico, ideal para ambientes cálidos.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/cortina-tipo-antigua.jpeg\",\n      titulo: \"Tradicional\",\n      descripcion: \"Con pinza americana. Cálidas y acogedoras.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/roller-rayada.jpeg\",\n      titulo: \"Bambú rayada\",\n      descripcion: \"Ideal para ambientes con estilo natural.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/roller-translucida.jpeg\",\n      titulo: \"Tela Screen\",\n      descripcion: \"Filtra el sol directo, protegiendo tus espacios del deterioro.\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/cortina-tipo-antigua-translucida.jpeg\",\n      titulo: \"Pinza italiana 1\",\n      descripcion: \"Cortina clásica con un toque más moderno.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/IMG-20250721-WA0006.jpg\",\n      titulo: \"Pinza italiana 2\",\n      descripcion: \"Cortina clásica con un toque más moderno.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0051.jpg\",\n      titulo: \"Cortina Blanca Tradicional\",\n      descripcion: \"Cortina de tela blanca clásica, aportando luminosidad a la habitación.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0052.jpg\",\n      titulo: \"Roller Blackout Gris\",\n      descripcion: \"Cortina roller blackout de color gris, ideal para oscurecer el ambiente.\",\n      size: \"wide\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0053.jpg\",\n      titulo: \"Roller Screen en Ventanal\",\n      descripcion: \"Cortina roller screen en un amplio ventanal, permitiendo la visibilidad exterior y filtrando la luz.\",\n      size: \"giant\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0054.jpg\",\n      titulo: \"Cortinas Blancas Largas\",\n      descripcion: \"Cortinas blancas de gran extensión, creando un ambiente elegante y luminoso.\",\n      size: \"wide\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0055.jpg\",\n      titulo: \"Cortinas Opacas en Habitación\",\n      descripcion: \"Cortinas opacas que garantizan privacidad y control total de la luz en el dormitorio.\",\n      size: \"wide\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0056.jpg\",\n      titulo: \"Roller Dual en Espacio Moderno\",\n      descripcion: \"Cortina roller dual en un ambiente con diseño moderno, ofreciendo versatilidad en la entrada de luz.\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0057.jpg\",\n      titulo: \"Cortina Corta para Ventana\",\n      descripcion: \"Cortina corta ideal para ventanas pequeñas, brindando privacidad sin obstaculizar el espacio.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0058.jpg\",\n      titulo: \"Cortinas en Sala de Estar\",\n      descripcion: \"Cortinas que complementan la decoración de una sala de estar, aportando calidez.\",\n      size: \"wide\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0059.jpg\",\n      titulo: \"Cortina de Baño Texturizada\",\n      descripcion: \"Cortina de baño con textura sutil, combinando funcionalidad y estilo.\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0060.jpg\",\n      titulo: \"Cortina Clásica para Oficina\",\n      descripcion: \"Cortina clásica que brinda un toque de elegancia y privacidad a un espacio de oficina.\",\n      size: \"normal\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0061.jpg\",\n      titulo: \"Ambiente Interior con Cortinas Suaves\",\n      descripcion: \"Cortinas de tela suave que crean un ambiente relajante y acogedor en el interior.\",\n      size: \"large\"\n    }, {\n      img: \"assets/img/IMG-20250726-WA0062.jpg\",\n      titulo: \"Dormitorio con Cortina Roller\",\n      descripcion: \"Dormitorio con cortina roller que permite regular la entrada de luz y asegurar el descanso.\",\n      size: \"normal\"\n    }];\n  }\n  // Duplicar trabajos para scroll infinito más suave\n  get trabajosInfinitos() {\n    const repeticiones = 3; // Repetir 3 veces para mejor efecto infinito\n    const trabajosExtendidos = [];\n    for (let rep = 0; rep < repeticiones; rep++) {\n      this.trabajos.forEach((trabajo, index) => {\n        trabajosExtendidos.push({\n          ...trabajo,\n          id: `${rep}-${index}` // ID único para tracking\n        });\n      });\n    }\n\n    return trabajosExtendidos;\n  }\n  ngAfterViewInit() {\n    // Menor delay y mejor inicialización\n    setTimeout(() => {\n      this.initAutoScroll();\n      this.setupEventListeners();\n    }, 150);\n  }\n  ngOnDestroy() {\n    this.cleanup();\n  }\n  cleanup() {\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = undefined;\n    }\n  }\n  setupEventListeners() {\n    const container = this.sliderContainer.nativeElement;\n    // Pausar en hover\n    container.addEventListener('mouseenter', () => {\n      this.isHovered = true;\n      this.pauseScroll();\n    });\n    container.addEventListener('mouseleave', () => {\n      this.isHovered = false;\n      if (!this.isPaused) {\n        this.resumeScroll();\n      }\n    });\n    // Manejo de visibility change para pausar cuando la pestaña no está activa\n    document.addEventListener('visibilitychange', () => {\n      if (document.hidden) {\n        this.pauseScroll();\n      } else if (!this.isHovered && !this.isPaused) {\n        this.resumeScroll();\n      }\n    });\n  }\n  initAutoScroll() {\n    const slider = this.sliderContainer.nativeElement;\n    const sliderGrid = this.sliderGrid.nativeElement;\n    // Esperar a que las imágenes se carguen\n    const images = sliderGrid.querySelectorAll('img');\n    let loadedImages = 0;\n    const checkAllImagesLoaded = () => {\n      loadedImages++;\n      if (loadedImages >= Math.min(images.length, 10)) {\n        // Solo esperar las primeras 10 imágenes\n        this.startScrollAnimation(slider, sliderGrid);\n      }\n    };\n    images.forEach((img, index) => {\n      if (index < 10) {\n        // Solo las primeras 10 imágenes\n        if (img.complete) {\n          checkAllImagesLoaded();\n        } else {\n          img.addEventListener('load', checkAllImagesLoaded);\n          img.addEventListener('error', checkAllImagesLoaded); // En caso de error también continuar\n        }\n      }\n    });\n    // Fallback si las imágenes tardan mucho\n    setTimeout(() => {\n      if (!this.animationId) {\n        this.startScrollAnimation(slider, sliderGrid);\n      }\n    }, 500);\n  }\n  startScrollAnimation(slider, sliderGrid) {\n    // Calcular el ancho total de forma más precisa\n    const firstSetWidth = this.calculateFirstSetWidth(sliderGrid);\n    const resetPoint = firstSetWidth;\n    const autoScroll = () => {\n      if (this.isHovered || this.isPaused || document.hidden) {\n        this.animationId = requestAnimationFrame(autoScroll);\n        return;\n      }\n      this.scrollAmount += this.speed;\n      // Reset suave cuando llegamos al final del primer set\n      if (this.scrollAmount >= resetPoint) {\n        this.scrollAmount = 0;\n      }\n      // Usar transform en lugar de scrollLeft para mejor performance\n      sliderGrid.style.transform = `translateX(-${this.scrollAmount}px)`;\n      this.animationId = requestAnimationFrame(autoScroll);\n    };\n    autoScroll();\n  }\n  calculateFirstSetWidth(sliderGrid) {\n    const items = sliderGrid.querySelectorAll('li');\n    const itemsPerSet = this.trabajos.length;\n    let maxRight = 0;\n    for (let i = 0; i < Math.min(itemsPerSet, items.length); i++) {\n      const item = items[i];\n      const right = item.offsetLeft + item.offsetWidth;\n      maxRight = Math.max(maxRight, right);\n    }\n    return maxRight + 20; // Pequeño padding\n  }\n\n  getItemClass(index, size) {\n    const baseClass = 'item';\n    switch (size) {\n      case 'large':\n        return `${baseClass} item-large`;\n      case 'giant':\n        return `${baseClass} item-giant`;\n      case 'wide':\n        return `${baseClass} item-wide`;\n      default:\n        return `${baseClass} item-normal`;\n    }\n  }\n  pauseScroll() {\n    this.isPaused = true;\n  }\n  resumeScroll() {\n    this.isPaused = false;\n    if (!this.animationId && !this.isHovered) {\n      this.initAutoScroll();\n    }\n  }\n  // Método para controlar la velocidad dinámicamente\n  setSpeed(newSpeed) {\n    this.speed = Math.max(0.1, Math.min(2, newSpeed)); // Limitar entre 0.1 y 2\n  }\n\n  static {\n    this.propDecorators = {\n      sliderContainer: [{\n        type: ViewChild,\n        args: ['sliderContainer']\n      }],\n      sliderGrid: [{\n        type: ViewChild,\n        args: ['sliderGrid']\n      }]\n    };\n  }\n};\nTrabajosComponent = __decorate([Component({\n  selector: 'app-trabajos',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], TrabajosComponent);\nexport { TrabajosComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}